name: Build, Push to ECR, and Deploy to Lightsail

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push API image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY_API }}:$IMAGE_TAG -t $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY_API }}:latest ./api
          docker push $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY_API }}:$IMAGE_TAG
          docker push $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY_API }}:latest

      - name: Build, tag, and push UI image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY_UI }}:$IMAGE_TAG -t $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY_UI }}:latest --build-arg NEXT_PUBLIC_API_URL=/api ./ui
          docker push $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY_UI }}:$IMAGE_TAG
          docker push $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY_UI }}:latest

  deploy-to-lightsail:
    needs: build-and-push # Este job só roda depois que o de cima for bem-sucedido
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Lightsail instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_SSH_HOST }}
          username: ${{ secrets.LIGHTSAIL_SSH_USERNAME }}
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script: |
            # Navega para o diretório do projeto
            cd ~/ai-image-dogs-classifier

            # Puxa o docker-compose.yml mais recente (se houver mudanças)
            git pull origin main

            # Configura as credenciais da AWS para a instância poder acessar o ECR
            aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws configure set region ${{ secrets.AWS_REGION }}

            # Autentica o Docker da instância no ECR
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

            # Baixa as novas imagens do ECR
            docker-compose pull

            # Reinicia os serviços com as novas imagens
            docker-compose up -d

            # Limpa imagens antigas
            docker image prune -f

            echo ">>> Deployment to Lightsail finished successfully! <<<"
